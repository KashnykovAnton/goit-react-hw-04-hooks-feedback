{"version":3,"sources":["components/Statistics.js","components/FeedbackOptions.js","components/Section.js","components/Notification.js","App.js","index.js"],"names":["Statistics","good","neutral","bad","total","positivePercentage","FeedbackOptions","options","onLeaveFeedback","Object","keys","map","el","type","name","onClick","uuidv4","Section","title","children","Notification","message","App","useState","setGood","setNeutral","setBad","countTotalFeedback","e","target","Math","round","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"iRAAe,SAASA,EAAT,GAMX,IALFC,EAKC,EALDA,KACAC,EAIC,EAJDA,QACAC,EAGC,EAHDA,IACAC,EAEC,EAFDA,MACAC,EACC,EADDA,mBAEA,OACE,+BACE,+BACE,sCACA,4BAAIJ,OAEN,+BACE,yCACA,4BAAIC,OAEN,+BACE,qCACA,4BAAIC,OAEN,+BACE,uCACA,4BAAIC,OAEN,+BACE,mDACW,IAAVA,EAAc,mCAAY,4BAAIC,U,YCzBxB,SAASC,EAAT,GAAwD,IAA7BC,EAA4B,EAA5BA,QAASC,EAAmB,EAAnBA,gBACjD,OACE,8BACGC,OAAOC,KAAKH,GAASI,KAAI,SAAAC,GAAE,OAC1B,wBAEEC,KAAK,SACLC,KAAMF,EACNG,QAASP,EAJX,SAMGI,GALII,oBCPA,SAASC,EAAT,GAAuC,IAApBC,EAAmB,EAAnBA,MAAOC,EAAY,EAAZA,SACvC,OACE,oCACE,6BAAKD,IACJC,KCJQ,SAASC,EAAT,GAAoC,IAAZC,EAAW,EAAXA,QACrC,OAAO,6BAAKA,ICMC,SAASC,IACtB,MAAwBC,mBAAS,GAAjC,mBAAOtB,EAAP,KAAauB,EAAb,KACA,EAA8BD,mBAAS,GAAvC,mBAAOrB,EAAP,KAAgBuB,EAAhB,KACA,EAAsBF,mBAAS,GAA/B,mBAAOpB,EAAP,KAAYuB,EAAZ,KAuBMC,EAAqB,WAEzB,OADc1B,EAAOC,EAAUC,GAUjC,OACE,gCACE,cAACc,EAAD,CAASC,MAAM,wBAAf,SACE,cAACZ,EAAD,CACEC,QAAS,CAAEN,OAAMC,UAASC,OAC1BK,gBArCgB,SAAAoB,GAGtB,OAFiBA,EAAEC,OAAXf,MAGN,IAAK,OACHU,EAAQvB,EAAO,GACf,MAEF,IAAK,UACHwB,EAAWvB,EAAU,GACrB,MAEF,IAAK,MACHwB,EAAOvB,EAAM,GACb,MAEF,QACE,aAwBF,cAACc,EAAD,CAASC,MAAM,aAAf,SAC4B,IAAzBS,IACC,cAACP,EAAD,CAAcC,QAAQ,sBAEtB,cAACrB,EAAD,CACEC,KAAMA,EACNC,QAASA,EACTC,IAAKA,EACLC,MAAOuB,IACPtB,mBAtBNyB,KAAKC,MAAO9B,EAAO0B,IAAwB,KAAO,WClCxDK,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,W","file":"static/js/main.374bf6e3.chunk.js","sourcesContent":["export default function Statistics({\n  good,\n  neutral,\n  bad,\n  total,\n  positivePercentage,\n}) {\n  return (\n    <ul>\n      <li>\n        <p>Good:</p>\n        <p>{good}</p>\n      </li>\n      <li>\n        <p>Neutral:</p>\n        <p>{neutral}</p>\n      </li>\n      <li>\n        <p>Bad:</p>\n        <p>{bad}</p>\n      </li>\n      <li>\n        <p>Total:</p>\n        <p>{total}</p>\n      </li>\n      <li>\n        <p>Positive feedback:</p>\n        {total === 0 ? <p>0%</p> : <p>{positivePercentage}</p>}\n      </li>\n    </ul>\n  );\n}\n","import { v4 as uuidv4 } from 'uuid';\n\nexport default function FeedbackOptions({ options, onLeaveFeedback }) {\n  return (\n    <div>\n      {Object.keys(options).map(el => (\n        <button\n          key={uuidv4()}\n          type=\"button\"\n          name={el}\n          onClick={onLeaveFeedback}\n        >\n          {el}\n        </button>\n      ))}\n    </div>\n  );\n}\n","export default function Section({ title, children }) {\n  return (\n    <section>\n      <h2>{title}</h2>\n      {children}\n    </section>\n  );\n}\n","export default function Notification({ message }) {\n  return <h3>{message}</h3>;\n}\n","import './App.css';\nimport { useState } from 'react';\nimport Statistics from './components/Statistics';\nimport FeedbackOptions from './components/FeedbackOptions';\nimport Section from './components/Section';\nimport Notification from './components/Notification';\n\nexport default function App() {\n  const [good, setGood] = useState(0);\n  const [neutral, setNeutral] = useState(0);\n  const [bad, setBad] = useState(0);\n\n  const onLeaveFeedback = e => {\n    const { name } = e.target;\n\n    switch (name) {\n      case 'good':\n        setGood(good + 1);\n        break;\n\n      case 'neutral':\n        setNeutral(neutral + 1);\n        break;\n\n      case 'bad':\n        setBad(bad + 1);\n        break;\n\n      default:\n        return;\n    }\n  };\n\n  const countTotalFeedback = () => {\n    const total = good + neutral + bad;\n    return total;\n  };\n\n  const countPositiveFeedbackPercentage = () => {\n    const positivePercentage =\n      Math.round((good / countTotalFeedback()) * 100) + '%';\n    return positivePercentage;\n  };\n\n  return (\n    <div>\n      <Section title=\"Please leave feedback\">\n        <FeedbackOptions\n          options={{ good, neutral, bad }}\n          onLeaveFeedback={onLeaveFeedback}\n        />\n      </Section>\n\n      <Section title=\"Statistics\">\n        {countTotalFeedback() === 0 ? (\n          <Notification message=\"No feedback given\" />\n        ) : (\n          <Statistics\n            good={good}\n            neutral={neutral}\n            bad={bad}\n            total={countTotalFeedback()}\n            positivePercentage={countPositiveFeedbackPercentage()}\n          />\n        )}\n      </Section>\n    </div>\n  );\n}\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport 'modern-normalize/modern-normalize.css';\r\nimport './index.css';\r\nimport App from './App';\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <App />\r\n  </React.StrictMode>,\r\n  document.getElementById('root'),\r\n);\r\n"],"sourceRoot":""}