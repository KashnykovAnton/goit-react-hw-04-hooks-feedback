{"version":3,"sources":["components/Statistics.js","components/FeedbackOptions.js","components/Section.js","components/Notification.js","App.js","index.js"],"names":["Statistics","good","neutral","bad","total","positivePercentage","FeedbackOptions","options","onLeaveFeedback","Object","keys","map","el","type","name","onClick","uuidv4","Section","title","children","Notification","message","App","state","e","target","setState","prevState","countTotalFeedback","countPositiveFeedbackPercentage","Math","round","this","Component","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"8SA6BeA,EA3BI,SAAC,GAAuD,IAArDC,EAAoD,EAApDA,KAAMC,EAA8C,EAA9CA,QAASC,EAAqC,EAArCA,IAAKC,EAAgC,EAAhCA,MAAOC,EAAyB,EAAzBA,mBAC/C,OACE,+BACE,+BACE,sCACA,4BAAIJ,OAEN,+BACE,yCACA,4BAAIC,OAEN,+BACE,qCACA,4BAAIC,OAEN,+BACE,uCACA,4BAAIC,OAEN,+BACE,mDACW,IAAVA,EAAc,mCAAY,4BAAIC,W,QCHxBC,EAjBS,SAAC,GAAkC,IAAhCC,EAA+B,EAA/BA,QAASC,EAAsB,EAAtBA,gBAClC,OACE,8BACGC,OAAOC,KAAKH,GAASI,KAAI,SAAAC,GAAE,OAC1B,wBAEEC,KAAK,SACLC,KAAMF,EACNG,QAASP,EAJX,SAMGI,GALII,qBCGAC,EATC,SAAC,GAAyB,IAAvBC,EAAsB,EAAtBA,MAAOC,EAAe,EAAfA,SACxB,OACE,oCACE,6BAAKD,IACJC,MCAQC,EAJM,SAAC,GAAiB,IAAfC,EAAc,EAAdA,QACtB,OAAO,6BAAKA,KCIRC,E,4MACJC,MAAQ,CACNtB,KAAM,EACNC,QAAS,EACTC,IAAK,G,EAGPK,gBAAkB,SAAAgB,GAChB,IAAQV,EAASU,EAAEC,OAAXX,KACR,EAAKY,UAAS,SAAAC,GACZ,OAAO,eAAGb,EAAOa,EAAUb,GAAQ,O,EAIvCc,mBAAqB,WACnB,MAA+B,EAAKL,MAEpC,OAFA,EAAQtB,KAAR,EAAcC,QAAd,EAAuBC,K,EAKzB0B,gCAAkC,WAChC,IAAQ5B,EAAS,EAAKsB,MAAdtB,KAGR,OADE6B,KAAKC,MAAO9B,EAAO,EAAK2B,qBAAwB,KAAO,K,4CAI3D,WACE,MAA+BI,KAAKT,MAA5BtB,EAAR,EAAQA,KAAMC,EAAd,EAAcA,QAASC,EAAvB,EAAuBA,IAErBK,EAGEwB,KAHFxB,gBACAoB,EAEEI,KAFFJ,mBACAC,EACEG,KADFH,gCAEF,OACE,gCACE,cAAC,EAAD,CAASX,MAAM,wBAAf,SACE,cAAC,EAAD,CACEX,QAASyB,KAAKT,MACdf,gBAAiBA,MAIrB,cAAC,EAAD,CAASU,MAAM,aAAf,SAC4B,IAAzBU,IACC,cAAC,EAAD,CAAcP,QAAQ,sBAEtB,cAAC,EAAD,CACEpB,KAAMA,EACNC,QAASA,EACTC,IAAKA,EACLC,MAAOwB,IACPvB,mBAAoBwB,e,GApDhBI,aA6DHX,IC9DfY,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,W","file":"static/js/main.cf0bbc85.chunk.js","sourcesContent":["import React from 'react';\n\nconst Statistics = ({ good, neutral, bad, total, positivePercentage }) => {\n  return (\n    <ul>\n      <li>\n        <p>Good:</p>\n        <p>{good}</p>\n      </li>\n      <li>\n        <p>Neutral:</p>\n        <p>{neutral}</p>\n      </li>\n      <li>\n        <p>Bad:</p>\n        <p>{bad}</p>\n      </li>\n      <li>\n        <p>Total:</p>\n        <p>{total}</p>\n      </li>\n      <li>\n        <p>Positive feedback:</p>\n        {total === 0 ? <p>0%</p> : <p>{positivePercentage}</p>}\n      </li>\n    </ul>\n  );\n};\n\nexport default Statistics;\n","import React from 'react';\nimport { v4 as uuidv4 } from 'uuid';\n\nconst FeedbackOptions = ({ options, onLeaveFeedback }) => {\n  return (\n    <div>\n      {Object.keys(options).map(el => (\n        <button\n          key={uuidv4()}\n          type=\"button\"\n          name={el}\n          onClick={onLeaveFeedback}\n        >\n          {el}\n        </button>\n      ))}\n    </div>\n  );\n};\n\nexport default FeedbackOptions;\n","import React from 'react';\n\nconst Section = ({ title, children }) => {\n  return (\n    <section>\n      <h2>{title}</h2>\n      {children}\n    </section>\n  );\n};\n\nexport default Section;\n","import React from 'react';\n\nconst Notification = ({ message }) => {\n  return <h3>{message}</h3>;\n};\n\nexport default Notification;\n","import './App.css';\nimport { Component } from 'react';\nimport Statistics from './components/Statistics';\nimport FeedbackOptions from './components/FeedbackOptions';\nimport Section from './components/Section';\nimport Notification from './components/Notification';\n\nclass App extends Component {\n  state = {\n    good: 0,\n    neutral: 0,\n    bad: 0,\n  };\n\n  onLeaveFeedback = e => {\n    const { name } = e.target;\n    this.setState(prevState => {\n      return { [name]: prevState[name] + 1 };\n    });\n  };\n\n  countTotalFeedback = () => {\n    const { good, neutral, bad } = this.state;\n    const total = good + neutral + bad;\n    return total;\n  };\n\n  countPositiveFeedbackPercentage = () => {\n    const { good } = this.state;\n    const positivePercentage =\n      Math.round((good / this.countTotalFeedback()) * 100) + '%';\n    return positivePercentage;\n  };\n\n  render() {\n    const { good, neutral, bad } = this.state;\n    const {\n      onLeaveFeedback,\n      countTotalFeedback,\n      countPositiveFeedbackPercentage,\n    } = this;\n    return (\n      <div>\n        <Section title=\"Please leave feedback\">\n          <FeedbackOptions\n            options={this.state}\n            onLeaveFeedback={onLeaveFeedback}\n          />\n        </Section>\n\n        <Section title=\"Statistics\">\n          {countTotalFeedback() === 0 ? (\n            <Notification message=\"No feedback given\" />\n          ) : (\n            <Statistics\n              good={good}\n              neutral={neutral}\n              bad={bad}\n              total={countTotalFeedback()}\n              positivePercentage={countPositiveFeedbackPercentage()}\n            />\n          )}\n        </Section>\n      </div>\n    );\n  }\n}\n\nexport default App;\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport 'modern-normalize/modern-normalize.css';\r\nimport './index.css';\r\nimport App from './App';\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <App />\r\n  </React.StrictMode>,\r\n  document.getElementById('root'),\r\n);\r\n"],"sourceRoot":""}